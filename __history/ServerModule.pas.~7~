unit ServerModule;

interface

uses
  Classes, SysUtils, uniGUIServer, uniGUIMainModule, uniGUIApplication, uIdCustomHTTPServer,
  uniGUITypes, Data.DB, MemDS, DBAccess, Uni, UniProvider, MySQLUniProvider,
  SQLServerUniProvider;

type
  TUniServerModule = class(TUniGUIServerModule)
  private
    { Private declarations }
  protected
    procedure FirstInit; override;
  public
    { Public declarations }
  end;

function UniServerModule: TUniServerModule;
function YearEng(DateEng: String): String;

implementation

{$R *.dfm}

uses
  UniGUIVars;

function UniServerModule: TUniServerModule;
begin
  Result:=TUniServerModule(UniGUIServerInstance);
end;

procedure TUniServerModule.FirstInit;
begin
  InitServerModule(Self);
end;

function YearEng(DateEng: String): String;
var y,m,d :Word;
begin
      Result := '';
      y := StrToInt(copy(DateEng,1,4));
      if  y > 2400 then
          y := y - 543
      else
          y := y + 543;

      Result := IntToStr(y) + copy(DateEng,5,6);
end;

function YearE(DateEng: String): String;
var y,m,d :Word;
begin
      Result := '';
      y := StrToInt(copy(DateEng,1,4));
      if  y > 2400 then
          y := y - 543
      else
          y := y + 543;

      Result := IntToStr(y);
end;

initialization
  RegisterServerModuleClass(TUniServerModule);
end.
